diff --git a/svn-backup2 b/svn-backup2
index 11abf7d..0709acb 100755
--- a/svn-backup2
+++ b/svn-backup2
@@ -29,7 +29,8 @@
 #
 # Application is hosted at: https://github.com/xor-gate/svn-backup2
 ##
-VERSION="0.1.0"
+VERSION="0.1.1"
+EXIT_CODE=0
 
 ###
 # Fixed paths
@@ -59,22 +60,27 @@ function log() {
 function check_and_create_paths() {
 	if [ ! command -v svnadmin &> /dev/null ]; then
 		log "ERROR: svnadmin not found in PATH, is subversion installed?"
-		exit 1
+		EXIT_CODE=1
+		return
 	fi
 
 	if [ ! command -v svnlook &> /dev/null ]; then
 		log "ERROR: svnlook not found in PATH, is subversion installed?"
-		exit 1
+		EXIT_CODE=1
+		return
 	fi
 
 	if [ ! command -v sha256sum &> /dev/null ]; then
 		log "ERROR: sha256sum not found in PATH, is coreutils installed?"
-		exit 1
+		EXIT_CODE=1
+		return
+
 	fi
 
 	if [ ! command -v gzip &> /dev/null ]; then
 		log "ERROR: gzip not found, is gzip installed?"
-		exit 1
+		EXIT_CODE=1
+		return
 	fi
 
 	if [ ! -f ${SVNBACKUP2_LOG_FILE} ]; then
@@ -95,19 +101,24 @@ function check_and_create_paths() {
 		log "Created configuration file with defaults at ${SVNBACKUP2_CONFIG_FILE}"
 		cat ${SVNBACKUP2_CONFIG_FILE}
 		log "NOTICE: Please run svn-backup2 again when configuration has been set"
-		exit 1
+
+		EXIT_CODE=1
+		return
 	fi
 
 	# When the backup path doesn't exist create it
 	if [ ! -d ${SVNBACKUP2_CFG_BACKUP_PATH} ]; then
 		log "ERROR: Backup path doesn't exist ${SVNBACKUP2_CFG_BACKUP_PATH}"
-		exit 1
+
+		EXIT_CODE=1
+		return
 	fi
 
 	# Check if repositories path exist
 	if [ ! -d ${SVNBACKUP2_CFG_REPOSITORIES_PATH} ]; then
 		log "ERROR: Repositories path doesn't exists at ${SVNBACKUP2_CFG_REPOSITORIES_PATH}"
-		exit 1
+		EXIT_CODE=1
+		return
 	fi
 }
 
@@ -146,7 +157,7 @@ function repository_store_state() {
 #  REPO_NAME
 #  SVNBACKUP2_BACKUP_STATE_PATH
 #  SVNBACKUP2_CFG_BACKUP_PATH
-# Sets
+# Sets:
 #  REPO_PATH
 #  REPO_STATE_FILE
 #  REPO_BACKUP_FILE
@@ -251,13 +262,17 @@ function repository_backup_subversion() {
 	log "Detected latest revision of repository is ${YOUNGEST}, backup has archived until revision ${SVNBACKUP2_REPO_STATE_YOUNGEST}"
 
 	if [ ! -f ${REPO_BACKUP_FILE} ]; then
-		log "Running full backup between 0:${YOUNGEST} revisions"
+		log "No previous backup found, running full backup until revision ${YOUNGEST}"
+
+		repository_backup_integrity_check
+
 		svnadmin dump -q -r "0:${YOUNGEST}" "${REPO_PATH}" | gzip -c > "${REPO_BACKUP_FILE}" 2> /dev/null
 
 		if [ $? = 0 ]; then
 			log "svnadmin dump ok"
 		else
 			log "ERROR: something went wrong during svnadmin dump"
+			EXIT_CODE=1
 		fi
 	elif [ ${YOUNGEST} = ${SVNBACKUP2_REPO_STATE_YOUNGEST} ]; then
 		log "Backup already up to date"
@@ -265,13 +280,21 @@ function repository_backup_subversion() {
 	else
 		REV_FILTER="$(($SVNBACKUP2_REPO_STATE_YOUNGEST + 1)):${YOUNGEST}"
 
-		log "Running incremental backup between ${REV_FILTER} revisions"
+		repository_backup_integrity_check
+		if [ ${REPO_CHECKSUM_OK} = 0 ]; then
+			log "ERROR: incremental backup skipped due to previous integrity check failure"
+			EXIT_CODE=1
+			return
+		fi
+
+		log "Running incremental backup between revisions ${REV_FILTER}"
 		svnadmin dump -q -r ${REV_FILTER} --incremental "${REPO_PATH}" | gzip -c >> "${REPO_BACKUP_FILE}" 2> /dev/null
 
 		if [ $? = 0 ]; then
 			log "svnadmin dump ok"
 		else
 			log "ERROR: something went wrong during svnadmin dump"
+			EXIT_CODE=1
 		fi
 	fi
 
@@ -305,6 +328,7 @@ function repository_backup_finish() {
 #
 # Sets:
 #  REPO_NAME
+#  SVNBACKUP2_REPO_STATE_LAST_BACKUP_START_TIME
 ##
 function repository_backup() {
 	export REPO_NAME="$1"
@@ -315,14 +339,11 @@ function repository_backup() {
 	export SVNBACKUP2_REPO_STATE_LAST_BACKUP_START_TIME="$(date +%s)"
 	log "Starting backup of repository ${REPO_NAME}"
 
-	repository_backup_integrity_check
-
 	# Create backup
 	repository_backup_subversion
-	touch "${REPO_BACKUP_FILE}" # test
+	repository_backup_create_checksum
 
 	# Finalize backup
-	repository_backup_create_checksum
 	repository_backup_finish
 	repository_store_state
 }
@@ -333,9 +354,12 @@ function repository_backup() {
 function repositories_backup() {
 	for repository in `ls -1 ${SVNBACKUP2_CFG_REPOSITORIES_PATH}`; do
 		repository_path="${SVNBACKUP2_CFG_REPOSITORIES_PATH}/${repository}"
+
+		# filter out only directories where the db folder is not present
 		if [ ! -d "${repository_path}/db" ]; then
 			continue
 		fi
+
 		repository_backup "${repository}"
 	done
 }
@@ -350,7 +374,8 @@ function operation_full_backup() {
 
 	if [ "${what}" = '' ]; then
 		log "ERROR: Please specify 'all' or '<repository name>' to force full backup"
-		exit 1
+		EXIT_CODE=1
+		return
 	fi
 
 	case ${what} in
@@ -379,6 +404,10 @@ function operation_help() {
 }
 
 check_and_create_paths
+if [ $EXIT_CODE != 0 ]; then
+	exit ${EXIT_CODE}
+fi
+
 load_config_file
 
 ###
@@ -399,3 +428,5 @@ case ${ARG_OPERATION} in
 		repositories_backup
 		;;
 esac
+
+exit ${EXIT_CODE}
